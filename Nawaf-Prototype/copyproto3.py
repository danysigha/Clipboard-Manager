# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'copyPrototype.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon, QPixmap
from PyQt5.QtCore import QTimer,QDateTime
from tkinter import Tk
from PIL import ImageGrab

import io
import codecs

import base64
import sqlite3


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.copyNow = QtWidgets.QPushButton(self.centralwidget)
        self.copyNow.setGeometry(QtCore.QRect(60, 430, 131, 51))
        self.copyNow.setObjectName("copyNow")
        self.copyLabel = QtWidgets.QLabel(self.centralwidget)
        self.copyLabel.setGeometry(QtCore.QRect(40, 180, 251, 171))
        self.copyLabel.setText("")
        self.copyLabel.setObjectName("copyLabel")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.timer=QTimer()
        self.timer.start(2000)
        self.timer.timeout.connect(self.press_it)
    def press_it(self):
        try:
            copy = Tk().clipboard_get()
        except:
            copy = ImageGrab.grabclipboard()
        if isinstance(copy,str):
            self.copyLabel.setText(copy)
        else:
           # copy.save('paste.png', 'PNG')
            #convert the image into a base64 string
            base64_text = self.imageConvert(copy)
            #connect to DB
            conn = sqlite3.connect("imgString.db")
            c= conn.cursor()


            #store the image string to the db
            c.execute("INSERT INTO imageStrings VALUES (:daText)",{"daText":base64_text})
            conn.commit()

            conn.close()




            imgdata = base64.b64decode(base64_text)
            filename = 'copied_image.png'
            with open(filename, 'wb') as f:
                f.write(imgdata)

            pixmap = QPixmap('copied_image.png')
            self.copyLabel.setPixmap(pixmap)



           # self.resize(pixmap.width(),pixmap.height())


    def imageConvert(image):
           # Get raw bytes
            img_bytes = io.BytesIO()
            image.save(img_bytes, format='PNG')

            # Convert bytes to base64
            base64_data = codecs.encode(img_bytes.getvalue(), 'base64')

            # Convert base64 data to a string
            base64_text = codecs.decode(base64_data, 'ascii')
            #return the base64 string
            return base64_text

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.copyNow.setText(_translate("MainWindow", "grab copy"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
